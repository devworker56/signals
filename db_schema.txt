-- Create the database
CREATE DATABASE IF NOT EXISTS trading_signals CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

USE trading_signals;

-- Admin users table
CREATE TABLE IF NOT EXISTS `admins` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(50) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `password_hash` VARCHAR(255) NOT NULL,
  `first_name` VARCHAR(50),
  `last_name` VARCHAR(50),
  `last_login` DATETIME,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`),
  UNIQUE KEY `email` (`email`)
) ENGINE=InnoDB;

-- Subscribers table (main table for signups)
CREATE TABLE IF NOT EXISTS `subscribers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `company` VARCHAR(100),
  `phone` VARCHAR(20),
  `ip_address` VARCHAR(45),
  `user_agent` TEXT,
  `referral_source` VARCHAR(50),
  `marketing_consent` BOOLEAN DEFAULT FALSE,
  `signup_date` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `last_updated` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `email` (`email`)
) ENGINE=InnoDB;

-- Subscription attempts log
CREATE TABLE IF NOT EXISTS `subscription_attempts` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `subscriber_id` INT UNSIGNED,
  `attempt_date` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `ip_address` VARCHAR(45),
  `user_agent` TEXT,
  `status` ENUM('pending', 'completed', 'failed') DEFAULT 'pending',
  `notes` TEXT,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`subscriber_id`) REFERENCES `subscribers`(`id`) ON DELETE SET NULL
) ENGINE=InnoDB;

-- Email notifications log
CREATE TABLE IF NOT EXISTS `email_log` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `subscriber_id` INT UNSIGNED,
  `email_type` ENUM('welcome', 'payment_link', 'service_unavailable', 'admin_alert'),
  `sent_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `status` ENUM('sent', 'delivered', 'failed'),
  `subject` VARCHAR(255),
  PRIMARY KEY (`id`),
  FOREIGN KEY (`subscriber_id`) REFERENCES `subscribers`(`id`) ON DELETE SET NULL
) ENGINE=InnoDB;

-- Admin activity log
CREATE TABLE IF NOT EXISTS `admin_logs` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `admin_id` INT UNSIGNED,
  `action` VARCHAR(50) NOT NULL,
  `description` TEXT,
  `ip_address` VARCHAR(45),
  `performed_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`admin_id`) REFERENCES `admins`(`id`) ON DELETE SET NULL
) ENGINE=InnoDB;

-- Sample admin user (password: securepassword123)
INSERT INTO `admins` (`username`, `email`, `password_hash`, `first_name`, `last_name`) 
VALUES (
  'admin', 
  'admin@tradingsignals.example', 
  '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 
  'System', 
  'Administrator'
);

-- Sample subscriber data
INSERT INTO `subscribers` (`name`, `email`, `company`, `phone`, `ip_address`, `marketing_consent`, `signup_date`)
VALUES
  ('John Smith', 'john.smith@example.com', 'Smith Trading', '+15551234567', '192.168.1.1', TRUE, '2023-01-15 09:30:45'),
  ('Emma Johnson', 'emma.j@example.com', NULL, '+15559876543', '203.0.113.42', FALSE, '2023-01-16 14:22:10'),
  ('Michael Brown', 'michael.b@example.com', 'Brown Investments', NULL, '198.51.100.55', TRUE, '2023-01-18 11:05:33');

-- Sample subscription attempts
INSERT INTO `subscription_attempts` (`subscriber_id`, `ip_address`, `status`, `notes`)
VALUES
  (1, '192.168.1.1', 'completed', 'Initial signup'),
  (2, '203.0.113.42', 'pending', 'Waiting for confirmation'),
  (3, '198.51.100.55', 'failed', 'Duplicate email attempt');

-- Sample email log entries
INSERT INTO `email_log` (`subscriber_id`, `email_type`, `status`, `subject`)
VALUES
  (1, 'welcome', 'delivered', 'Welcome to AI Trading Signals'),
  (2, 'service_unavailable', 'sent', 'Your AI Trading Signals Subscription'),
  (3, 'admin_alert', 'delivered', 'New subscription attempt');